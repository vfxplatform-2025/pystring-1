# -*- coding: utf-8 -*-
#!/usr/bin/env python

import os
import sys
import shutil
import textwrap
import subprocess

def run_cmd(cmd, cwd=None):
    print(f"[RUN] {cmd}")
    subprocess.run(cmd, shell=True, cwd=cwd, check=True)

def clean(path, exclude_marker=".rxt"):
    if os.path.exists(path):
        for entry in os.listdir(path):
            full = os.path.join(path, entry)
            if entry.endswith(exclude_marker):
                continue
            if os.path.isdir(full):
                shutil.rmtree(full)
            else:
                os.remove(full)

def build(source_path, build_path, install_path_env, targets):
    version = os.environ.get("REZ_BUILD_PROJECT_VERSION", "1.1.3")
    src_dir = os.path.join(source_path, f"source/pystring-{version}")
    install_root = f"/core/Linux/APPZ/packages/pystring/{version}"

    # 1) Clean build/install dirs
    clean(build_path)
    if "install" in targets:
        clean(install_root)

    # 2) Copy header
    os.makedirs(os.path.join(install_root, "include"), exist_ok=True)
    shutil.copy(
        os.path.join(src_dir, "pystring.h"),
        os.path.join(install_root, "include", "pystring.h")
    )

    # 3) Generate CMake config in both lib64 and lib
    for libdir in ("lib64", "lib"):
        cmake_dir = os.path.join(install_root, libdir, "cmake", "pystring")
        os.makedirs(cmake_dir, exist_ok=True)

        # pystringTargets.cmake
        with open(os.path.join(cmake_dir, "pystringTargets.cmake"), "w") as f:
            f.write(textwrap.dedent(f"""\
                # Generated by rezbuild
                add_library(pystring INTERFACE IMPORTED)
                set_target_properties(pystring PROPERTIES
                  INTERFACE_INCLUDE_DIRECTORIES "${{CMAKE_CURRENT_LIST_DIR}}/../../../../include"
                )
                add_library(PyString::pystring ALIAS pystring)
            """))

        # pystringConfig.cmake
        with open(os.path.join(cmake_dir, "pystringConfig.cmake"), "w") as f:
            f.write(textwrap.dedent(f"""\
                @PACKAGE_INIT@
                include(CMakeFindDependencyMacro)
                find_dependency(pystring)
                include("${{CMAKE_CURRENT_LIST_DIR}}/pystringTargets.cmake")
            """))

    # 4) Copy package.py
    shutil.copy(
        os.path.join(source_path, "package.py"),
        os.path.join(install_root, "package.py")
    )

    print("âœ… pystring header and CMake config installed.")

if __name__ == "__main__":
    build(
        source_path      = os.environ.get("REZ_BUILD_SOURCE_PATH", ""),
        build_path       = os.environ.get("REZ_BUILD_PATH", ""),
        install_path_env = os.environ.get("REZ_BUILD_INSTALL_PATH", ""),
        targets          = sys.argv[1:],
    )

